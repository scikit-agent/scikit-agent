name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage manual --all-files
      #- name: Install package
      #  run: python -m pip install .
      #- name: Run PyLint
      #  run: pipx run nox -s pylint -- --output-format=github

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.12"]
        runs-on: [ubuntu-latest, windows-latest, macos-14]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install OpenBLAS on Ubuntu
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libopenblas-dev

      - name: Install LLVM 14
        if: runner.os == 'Linux'
        run: sudo apt-get install llvm-14 llvm-14-dev

      - name: Configure LLVM 14
        if: runner.os == 'Linux'
        run: echo "LLVM_CONFIG=/usr/bin/llvm-config-14" >> $GITHUB_ENV

      - name: Graphviz install (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install graphviz graphviz-dev

      - name: Graphviz install (macOS)
        if: runner.os == 'macOS'
        run: brew install graphviz

      - name: Graphviz install (Windows)
        if: runner.os == 'Windows'
        run: choco install graphviz

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[test]"

      - name: Test package
        run: >-
          python -m pytest -ra --cov --cov-report=xml --cov-report=term
          --durations=20

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
